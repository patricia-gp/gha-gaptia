name: API First Generate

# Controls when the workflow will run
on:
  workflow_call:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-yelp"
  openapi:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo ${{ github.repository }} Brach ${{ github.ref }}
        uses: actions/checkout@v3.5.3
          
      # Use the action to generate a client package
      # This uses the default path for the openapi document and thus assumes there is an openapi.json in the current workspace.
      - name: Generate Client & Stub Java
        uses: openapi-generators/openapitools-generator-action@v1.3.0
        with:
          generator: java
          openapi-file: apis/gaptia-rest.yml
          generator-tag: latest-release
                  
      - name: Create artifact SNAPSHOT (only develop)        
        if: github.ref == 'refs/heads/develop'
        uses: actions/upload-artifact@v3
        with:
          name: generated-client
          path: gaptia-rest-client/        
          command-args: -p snapshotVersion=true -t /github/workspace/templates/spring-boot
                            
      - name: Create artifact STABLE (only main)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: generated-client
          path: spring-client/        
          command-args: -t /github/workspace/templates/spring-boot

      - name: Tag version
        if: github.ref == 'refs/heads/main'
        uses: butlerlogic/action-autotag@stable
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          strategy: regex
          root: /github/workspace/spring-client/pom.xml
          regex_pattern: '<version>([^<]+)<'
          
      - name: Set up Java for publishing to GitHub Packages
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Publish to GitHub Packages
        run: |
          cd spring-client
          mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
